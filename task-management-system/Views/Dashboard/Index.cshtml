@{
    ViewData["Title"] = "Dashboard";
    Layout = "_DashboardLayout";
}

<link rel="stylesheet" href="~/css/dashboard-css/dashboard.css" asp-append-version="true" />

    <!-- Welcome Section -->
    <div class="welcome-section">
        <div class="welcome-content">
            <h1 class="welcome-title">Hello, @ViewBag.UserName! 👋</h1>
            <p class="welcome-subtitle">Here's what's happening with your projects today.</p>
        </div>
        <div class="welcome-date">
            <i class="fas fa-calendar-alt"></i>
            <span id="currentDate"></span>
        </div>
    </div>

    <!-- Stats Cards -->
    <div class="stats-grid">
        <a href="@Url.Action("Index", "Task", new { filter = "all" })" class="stat-card-link">
            <div class="stat-card">
                <div class="stat-icon">
                    <i class="fas fa-tasks"></i>
                </div>
                <div class="stat-content">
                    <h3 class="stat-number" id="totalTasks">@ViewBag.TotalTasks</h3>
                    <p class="stat-label">Total Tasks</p>
                    <span class="stat-trend">
                        <i class="fas fa-arrow-up"></i> Active tasks
                    </span>
                </div>
            </div>
        </a>

        <a href="@Url.Action("Index", "Task", new { filter = "completed" })" class="stat-card-link">
            <div class="stat-card">
                <div class="stat-icon">
                    <i class="fas fa-check-circle"></i>
                </div>
                <div class="stat-content">
                    <h3 class="stat-number" id="completedTasks">@ViewBag.CompletedTasks</h3>
                    <p class="stat-label">Completed</p>
                    <span class="stat-trend">
                        <i class="fas fa-arrow-up"></i> Tasks completed
                    </span>
                </div>
            </div>
        </a>

        <a href="@Url.Action("Index", "Task", new { filter = "inprogress" })" class="stat-card-link">
            <div class="stat-card">
                <div class="stat-icon">
                    <i class="fas fa-clock"></i>
                </div>
                <div class="stat-content">
                    <h3 class="stat-number" id="pendingTasks">@ViewBag.PendingTasks</h3>
                    <p class="stat-label">In Progress</p>
                    <span class="stat-trend">
                        <i class="fas fa-minus"></i> Tasks remaining
                    </span>
                </div>
            </div>
        </a>
    </div>

    <!-- Charts and Activity Section -->
    <div class="dashboard-grid">
        <!-- Task Progress Chart -->
        <div class="dashboard-card chart-card">
            <div class="card-header">
                <h3 class="card-title">
                    <i class="fas fa-chart-line"></i>
                    Task Progress Overview
                </h3>
                <div class="card-actions">
                    <button class="btn-icon" title="Refresh">
                        <i class="fas fa-sync-alt"></i>
                    </button>
                </div>
            </div>
            <div class="card-content">
                <div class="progress-chart">
                    <canvas id="taskProgressChart" width="400" height="200"></canvas>
                </div>
                <div class="chart-legend">
                    <div class="legend-item">
                        <span class="legend-color completed"></span>
                        <span>Completed (@(ViewBag.TotalTasks > 0 ? Math.Round((double)ViewBag.CompletedTasks / ViewBag.TotalTasks * 100, 1) : 0)%)</span>
                    </div>
                    <div class="legend-item">
                        <span class="legend-color in-progress"></span>
                        <span>In Progress (@(ViewBag.TotalTasks > 0 ? Math.Round((double)ViewBag.PendingTasks / ViewBag.TotalTasks * 100, 1) : 0)%)</span>
                    </div>
                    <div class="legend-item">
                        <span class="legend-color pending"></span>
                        <span>Not Started (0%)</span>
                    </div>
                </div>
            </div>
        </div>

        <!-- Recent Activity -->
        <div class="dashboard-card activity-card">
            <div class="card-header">
                <h3 class="card-title">
                    <i class="fas fa-clock"></i>
                    Recent Activity
                </h3>
                <a href="@Url.Action("Index", "Task")" class="view-all-link">View All</a>
            </div>
            <div class="card-content">
                <div class="activity-list">
                    @if (ViewBag.RecentActivity != null && ((List<object>)ViewBag.RecentActivity).Any())
                    {
                        @foreach (dynamic activity in ViewBag.RecentActivity)
                        {
                            var timeAgo = GetTimeAgo(activity.Time);
                            <div class="activity-item">
                                <div class="activity-icon">
                                    <i class="fas @activity.Icon"></i>
                                </div>
                                <div class="activity-content">
                                    <p class="activity-text">@activity.Text</p>
                                    <span class="activity-time">@timeAgo</span>
                                </div>
                            </div>
                        }
                    }
                    else
                    {
                        <div class="empty-state-small">
                            <i class="fas fa-history"></i>
                            <p>No recent activity</p>
                        </div>
                    }
                </div>
            </div>
        </div>

@functions {
    string GetTimeAgo(DateTime dateTime)
    {
        var timeSpan = DateTime.Now - dateTime;
        
        if (timeSpan.TotalSeconds < 60)
            return "Just now";
        if (timeSpan.TotalMinutes < 60)
            return $"{(int)timeSpan.TotalMinutes} minute{((int)timeSpan.TotalMinutes != 1 ? "s" : "")} ago";
        if (timeSpan.TotalHours < 24)
            return $"{(int)timeSpan.TotalHours} hour{((int)timeSpan.TotalHours != 1 ? "s" : "")} ago";
        if (timeSpan.TotalDays < 30)
            return $"{(int)timeSpan.TotalDays} day{((int)timeSpan.TotalDays != 1 ? "s" : "")} ago";
        if (timeSpan.TotalDays < 365)
            return $"{(int)(timeSpan.TotalDays / 30)} month{((int)(timeSpan.TotalDays / 30) != 1 ? "s" : "")} ago";
        
        return $"{(int)(timeSpan.TotalDays / 365)} year{((int)(timeSpan.TotalDays / 365) != 1 ? "s" : "")} ago";
    }
    
    string GetDeadlineTime(DateTime dueDate)
    {
        var timeSpan = dueDate - DateTime.Now;
        
        if (timeSpan.TotalHours < 24)
            return $"{(int)timeSpan.TotalHours} hours";
        if (timeSpan.TotalDays < 7)
            return $"{(int)timeSpan.TotalDays} day{((int)timeSpan.TotalDays != 1 ? "s" : "")}";
        if (timeSpan.TotalDays < 30)
            return $"{(int)(timeSpan.TotalDays / 7)} week{((int)(timeSpan.TotalDays / 7) != 1 ? "s" : "")}";
        
        return dueDate.ToString("MMM dd");
    }
}

        <!-- Upcoming Deadlines -->
        <div class="dashboard-card deadlines-card">
            <div class="card-header">
                <h3 class="card-title">
                    <i class="fas fa-exclamation-triangle"></i>
                    Upcoming Deadlines
                </h3>
            </div>
            <div class="card-content">
                <div class="deadlines-list">
                    @if (ViewBag.UpcomingDeadlines != null && ((List<task_management_system.Models.AddTask>)ViewBag.UpcomingDeadlines).Any())
                    {
                        @foreach (var task in (List<task_management_system.Models.AddTask>)ViewBag.UpcomingDeadlines)
                        {
                            <a href="@Url.Action("Dashboard", "Task", new { id = task.Id })" class="deadline-item-link">
                                <div class="deadline-item">
                                    <div class="deadline-info">
                                        <h4>@task.Title</h4>
                                        <p>@task.Description</p>
                                        <span class="priority-badge-small @task.Priority.ToString().ToLower()">@task.Priority Priority</span>
                                    </div>
                                    <div class="deadline-time">
                                        <span class="time-badge">@(task.DueDate.HasValue ? GetDeadlineTime(task.DueDate.Value) : "No date")</span>
                                    </div>
                                </div>
                            </a>
                        }
                    }
                    else
                    {
                        <div class="empty-state-small">
                            <i class="fas fa-calendar-check"></i>
                            <p>No upcoming deadlines</p>
                        </div>
                    }
                </div>
            </div>
        </div>

         <!-- Agenda Section - Now properly positioned -->
    <div class="dashboard-card agenda-card">
        <div class="card-header">
            <h3 class="card-title">
                <i class="fas fa-calendar-day"></i>
                Today's Agenda
            </h3>
        </div>
        <div class="card-content">
            <div class="agenda-list">
                @if (ViewBag.TodaysAgenda != null && ((List<task_management_system.Models.AddTask>)ViewBag.TodaysAgenda).Any())
                {
                    @foreach (var task in (List<task_management_system.Models.AddTask>)ViewBag.TodaysAgenda)
                    {
                        <a href="@Url.Action("Dashboard", "Task", new { id = task.Id })" class="agenda-item-link">
                            <div class="agenda-item">
                                <div class="agenda-time">
                                    <span class="time-slot">@(task.DueDate.HasValue ? task.DueDate.Value.ToString("hh:mm tt") : "All day")</span>
                                </div>
                                <div class="agenda-content">
                                    <h4>@task.Title</h4>
                                    <p>@task.Description</p>
                                    @if (!string.IsNullOrEmpty(task.Project))
                                    {
                                        <span class="agenda-location">
                                            <i class="fas fa-folder"></i>
                                            @task.Project
                                        </span>
                                    }
                                    <span class="priority-badge-small @task.Priority.ToString().ToLower()">@task.Priority Priority</span>
                                </div>
                            </div>
                        </a>
                    }
                }
                else
                {
                    <div class="empty-state-small">
                        <i class="fas fa-calendar-day"></i>
                        <p>No tasks scheduled for today</p>
                        <small>You're all caught up!</small>
                    </div>
                }
            </div>
        </div>
    </div>
    </div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        // Dashboard data for JavaScript
        window.dashboardData = {
            totalTasks: @ViewBag.TotalTasks,
            completedTasks: @ViewBag.CompletedTasks,
            pendingTasks: @ViewBag.PendingTasks
        };

        // Dashboard URLs for JavaScript
        window.dashboardUrls = {
            taskUrl: '@Url.Action("Index", "Task")',
            projectUrl: '@Url.Action("Index", "Projects")',
        };
    </script>
    <script src="~/js/webpages-js/dashboard.js" asp-append-version="true"></script>
}